
"检测文件的类型    
 filetype on
   
  " 剪切板
  set clipboard=unnamed
   
  " 显示行号
   set number
   
   " 开启语法高亮
   syntax on
  
   " 显示标尺
   set ruler
  
   " 打开折叠
   set foldenable
  
  " 打开自动缩进
   set autoindent
  
  " C 语言缩进
  set cindent
  
   " 缩进为 2 个空格
   set shiftwidth=2
  
   " tab 键相当于 2 个空格
   set tabstop=2
  
  "记录历史的行数
  set history=1000
  set cursorline
  
    "高亮显示所有匹配
  set hlsearch
 
 +++++++++++++++++++++
 "一键编译运行（包括了库的连接） 
  func! CompileGcc()
    exec "w"
    let compilecmd="!gcc "
    let compileflag="-Wall -o %<.exe "
    if search("mpi\.h") != 0
        let compilecmd = "!mpicc "
    endif
    if search("glut\.h") != 0
        let compileflag .= " -lglut -lGLU -lGL "
    endif
    if search("cv\.h") != 0
        let compileflag .= " -lcv -lhighgui -lcvaux "
    endif
    if search("omp\.h") != 0
        let compileflag .= " -fopenmp "
    endif
    if search("math\.h") != 0
        let compileflag .= " -lm "
    endif
    exec compilecmd." % ".compileflag
    exec "!time ./%<.exe"
endfunc
func! CompileGpp()
    exec "w"
    let compilecmd="!g++ "
    let compileflag="-Wall -o %<.exe "
    if search("mpi\.h") != 0
        let compilecmd = "!mpic++ "
    endif
    if search("glut\.h") != 0
        let compileflag .= " -lglut -lGLU -lGL "
    endif
    if search("cv\.h") != 0
        let compileflag .= " -lcv -lhighgui -lcvaux "
    endif
    if search("omp\.h") != 0
        let compileflag .= " -fopenmp "
    endif
    if search("math\.h") != 0
        let compileflag .= " -lm "
    endif
    exec compilecmd." % ".compileflag
    exec "!time ./%<.exe"
endfunc

func! RunPython()
        exec "!python %"
endfunc
func! CompileJava()
    exec "!javac %"
endfunc


func! CompileCode()
        exec "w"
        if &filetype == "cpp"
                exec "call CompileGpp()"
        elseif &filetype == "c"
                exec "call CompileGcc()"
        elseif &filetype == "python"
                exec "call RunPython()"
        elseif &filetype == "java"
                exec "call CompileJava()"
        endif
endfunc


map <F5> :call CompileCode()<CR>
imap <F5> <ESC>:call CompileCode()<CR>
vmap <F5> <ESC>:call CompileCode()<CR>

  "括号和其他成对符号的按键映射的匹配：
  inoremap ( ()<LEFT>
  inoremap [ []<LEFT>
  inoremap { {}<LEFT>
  inoremap ' ''<LEFT>
  inoremap " ""<LEFT>
  

